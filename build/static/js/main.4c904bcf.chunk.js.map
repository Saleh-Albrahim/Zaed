{"version":3,"sources":["context/users/usersContext.tsx","context/types.js","context/users/usersReducer.tsx","context/users/UsersState.tsx","img/logo.svg","util/alerts.tsx","pages/HomePage.tsx","components/sidebar/Logout.tsx","components/sidebar/SidebarItem.tsx","components/sidebar/Sidebar.tsx","components/offer/ImagePreview.tsx","components/offer/offerDetails.tsx","components/offer/OfferItem.tsx","components/offer/OfferList.tsx","scene/BeneficiaryScene.tsx","pages/BeneficiaryPage.tsx","pages/DonatePage.tsx","pages/NotFound.tsx","theme.tsx","App.tsx","index.tsx"],"names":["usersContext","createContext","GET_USERS_LIST","SET_USER","state","action","type","usersList","payload","user","OrderState","children","initialState","undefined","useReducer","UsersReducer","dispatch","getUsersList","a","fetch","response","status","json","data","Provider","value","updateUser","MySwal","withReactContent","Swal","successAlertTimer","message","fire","icon","text","timer","customClass","container","background","showConfirmButton","askQuestionAlert","onClose","input","onOpen","enableInput","getInput","focus","inputValue","willClose","confirmButtonText","confirmButtonColor","buttonStyle","fontSize","border","borderRadius","boxShadow","transition","color","_hover","transform","HomePage","history","useHistory","height","justifyContent","alignItems","ba","py","rounded","align","borderColor","width","boxSize","src","Logo","alt","fontWeight","onClick","push","backgroundColor","Logout","updateScene","useContext","UsersContext","submitLogin","localStorage","removeItem","getConfirmButton","blur","console","log","position","right","bottom","e","SideBarItem","selected","currentScene","target","innerText","sidebarData","Sidebar","p","w","top","h","borderLeft","display","m","map","item","index","SidebarItem","ImagePreview","isOpen","isCentered","ItemDetails","useDisclosure","isOpenImage","onOpenImage","onCloseImage","useState","imageSrc","setImageSrc","onSubmit","preventDefault","size","closeOnOverlayClick","zIndex","flexDirection","mt","outlineColor","readOnly","cursor","image","mr","OfferItem","offerData","name","sx","marginLeft","location","OfferList","spacing","offer","BeneficiaryScene","pointerEvents","ml","Search","aria-label","focusBorderColor","variant","px","placeholder","mb","Dashboard","allData","cloth","houseHold","school","electronic","scene","setScene","setData","DonatePage","textIndent","defaultValue","disabled","label","_focus","NotFound","textAlign","to","theme","extendTheme","styles","global","body","bg","backgroundImage","fonts","heading","shadows","outline","App","maxW","path","exact","component","BeneficiaryPage","ReactDOM","render","initialColorMode","UsersState","document","getElementById"],"mappings":"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","file":"static/js/main.4c904bcf.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst usersContext = createContext('');\r\n\r\nexport default usersContext;\r\n","// Orders\r\nexport const GET_TABLE_DATA = 'GET_TABLE_DATA';\r\nexport const GET_TYPE_LIST = 'GET_TYPE_LIST';\r\n\r\n// Users\r\nexport const GET_USERS_LIST = 'GET_USERS_LIST';\r\nexport const SET_USER = 'SET_USER';\r\nexport const GET_USER = 'GET_USER';\r\n","import { GET_USERS_LIST, SET_USER } from '../types';\r\n\r\nexport default (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case GET_USERS_LIST:\r\n      return {\r\n        ...state,\r\n        usersList: action.payload,\r\n      };\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// @ts-nocheck\r\nimport React, { useReducer } from 'react';\r\nimport usersContext from './usersContext';\r\nimport UsersReducer from './usersReducer';\r\nimport { GET_USERS_LIST, SET_USER } from '../types';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst OrderState: React.FC = ({ children }: Props) => {\r\n  const initialState = {\r\n    usersList: [{}],\r\n    user: undefined,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(UsersReducer, initialState);\r\n\r\n  // GET Users List\r\n  const getUsersList = async () => {\r\n    const response = await fetch(`/api/v1/auth/users`);\r\n\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n\r\n      dispatch({\r\n        type: GET_USERS_LIST,\r\n        payload: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Update the user\r\n  const updateUser = (user) =>\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: user,\r\n    });\r\n\r\n  return (\r\n    <usersContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        usersList: state.usersList,\r\n        getUsersList,\r\n        updateUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </usersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderState;\r\n","export default __webpack_public_path__ + \"static/media/logo.36666f15.svg\";","import Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport './styles.css';\r\n\r\nconst MySwal: any = withReactContent(Swal);\r\n\r\nexport const errorAlert = (message: string): void => {\r\n  MySwal.fire({\r\n    icon: 'error',\r\n    text: message,\r\n    onOpen: () => MySwal.getConfirmButton().blur(),\r\n    background: 'white',\r\n    customClass: {\r\n      container: 'my-swal',\r\n    },\r\n    confirmButtonText: 'المحاولة مرة اخرى',\r\n    confirmButtonColor: '#276749',\r\n  });\r\n};\r\n\r\nexport const successAlertTimer = (message: string): void => {\r\n  MySwal.fire({\r\n    icon: 'success',\r\n    text: message,\r\n    timer: 1500,\r\n    customClass: {\r\n      container: 'my-swal',\r\n    },\r\n    background: 'white',\r\n    showConfirmButton: false,\r\n  });\r\n};\r\n\r\nexport const askQuestionAlert = async (onClose: any) => {\r\n  MySwal.fire({\r\n    icon: 'info',\r\n    text: 'إضافة ملاحظات للمتبرع',\r\n    background: 'white',\r\n    input: 'textarea',\r\n    onOpen: () => {\r\n      MySwal.enableInput();\r\n      MySwal.getInput().focus();\r\n    },\r\n    inputValue: 'لا يوجد ملاحظات',\r\n    willClose: () => {\r\n      successAlertTimer('تم إرسال الطلب بنجاح');\r\n      onClose();\r\n    },\r\n    customClass: {\r\n      container: 'my-swal',\r\n    },\r\n    confirmButtonText: 'إرسال الطلب',\r\n    confirmButtonColor: '#276749',\r\n  });\r\n};\r\n","import { Box, Flex, Text, Container, Button, SimpleGrid, VStack, Image } from '@chakra-ui/react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from '../img/logo.svg';\r\nimport Background from '../img/pattren-01.png';\r\nimport { errorAlert, successAlertTimer } from '../util/alerts';\r\n\r\nconst buttonStyle: any = {\r\n  fontSize: '20px',\r\n  border: '1px solid',\r\n  borderRadius: '5px',\r\n  boxShadow: '2xl',\r\n  background: 'white',\r\n  transition: 'all .2s ease-in-out',\r\n  color: 'green.700',\r\n  _hover: { boxShadow: '2xl', transform: 'scale(1.01)' },\r\n};\r\n\r\nconst HomePage = () => {\r\n  const history = useHistory();\r\n  const goToBeneficiary = () => {\r\n    successAlertTimer('تم تسجيل الدخول بنجاح');\r\n    history.push('/beneficiary');\r\n  };\r\n  const goToDonate = () => {\r\n    history.push('/donate');\r\n  };\r\n  return (\r\n    <VStack height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\r\n      <VStack ba py=\"45px\" rounded=\"md\" align=\"center\" borderColor=\"black\" boxShadow=\"dark-lg\" width=\"30%\">\r\n        <Image boxSize=\"200px\" src={Logo} alt=\"شاركنا\" />\r\n        <Text color=\"green.700\" fontSize=\"40px\" fontWeight=\"bold\">\r\n          منصة زائد\r\n        </Text>\r\n        <br />\r\n        <Text align=\"center\" color=\"green.700\" fontSize=\"35px\">\r\n          زائد عندك ناقص عند غيرك\r\n        </Text>\r\n        <br />\r\n        <br />\r\n        <Text align=\"center\" color=\"green.700\" fontSize=\"20px\" width=\"92%\">\r\n          منصه زائد هي منصه سعودية غير ربحية تعنى في الزائد لدى الافراد وضمانيه وصوله الى المحتاجين بالتواصل المباشر\r\n          معهم بموثوقيه و سهولة تحت إشراف متخصصين في التحقق من صحة الاحتياج\r\n        </Text>\r\n        <br />\r\n        <br />\r\n        <Button {...buttonStyle} onClick={goToDonate} width=\"350px\" fontSize=\"1.5rem\" py=\"7\">\r\n          تبرع الان !\r\n        </Button>\r\n      </VStack>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <VStack width=\"30%\">\r\n        <Text align=\"center\" color=\"green.700\">\r\n          لديك ناقص عيني يمكنك الاطلاع على العديد من الزائد لدى الآخرين والاستفادة منه\r\n          <br />\r\n        </Text>\r\n        <Button {...buttonStyle} onClick={goToBeneficiary} width=\"230px\" fontSize=\"1rem\" py=\"4\">\r\n          تقدم في طلبك الان\r\n        </Button>\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { Button } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, { useContext } from 'react';\r\nimport { errorAlert, successAlertTimer } from '../../util/alerts';\r\nimport UsersContext from '../../context/users/usersContext';\r\n\r\nconst buttonStyle: any = {\r\n  height: '60px',\r\n  width: '240px',\r\n  fontSize: '20px',\r\n  backgroundColor: 'white',\r\n  borderRadius: '5px',\r\n  border: '1px solid',\r\n  color: 'green.700',\r\n  boxShadow: 'base',\r\n  transition: 'all .2s ease-in-out',\r\n  _hover: { boxShadow: 'lg', transform: 'scale(1.01)' },\r\n};\r\n\r\ninterface Props {\r\n  updateScene: (value: string) => void;\r\n}\r\n\r\nconst Logout = ({ updateScene }: Props) => {\r\n  const history = useHistory();\r\n\r\n  const usersContext = useContext(UsersContext);\r\n\r\n  //  @ts-expect-error\r\n  const { updateUser } = usersContext;\r\n\r\n  const submitLogin: any = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/auth/logout');\r\n      const data = await response.json();\r\n      if (response.status === 200) {\r\n        updateScene('الرئيسية');\r\n        updateUser(undefined);\r\n        successAlertTimer(data.message);\r\n        localStorage.removeItem('user');\r\n        history.push('/');\r\n      } else {\r\n        errorAlert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(`error`, error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        position=\"fixed\"\r\n        right={1}\r\n        bottom={2}\r\n        {...buttonStyle}\r\n        color=\"red.700\"\r\n        onClick={(e: any) => submitLogin()}\r\n      >\r\n        تسجيل الخروج\r\n      </Button>\r\n      <Button position=\"fixed\" right={1} bottom=\"77px\" {...buttonStyle}>\r\n        طلباتي\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import { Button } from '@chakra-ui/react';\r\n\r\nconst buttonStyle: any = {\r\n  height: '60px',\r\n  width: '240px',\r\n  fontSize: '20px',\r\n  backgroundColor: 'white',\r\n  borderRadius: '5px',\r\n  border: '1px solid',\r\n  color: 'green.700',\r\n  boxShadow: 'base',\r\n  transition: 'all .2s ease-in-out',\r\n  _hover: { boxShadow: 'lg', transform: 'scale(1.01)' },\r\n};\r\n\r\ninterface Props {\r\n  updateScene: (value: string) => void;\r\n  value: string;\r\n  currentScene: string;\r\n}\r\n\r\nconst SideBarItem = ({ updateScene, currentScene, value }: Props) => {\r\n  let selected;\r\n  if (value === currentScene) {\r\n    selected = {\r\n      borderColor: 'green.700',\r\n      border: '2px solid',\r\n      fontWeight: '1000',\r\n    };\r\n  } else {\r\n    selected = {\r\n      border: '1px solid',\r\n    };\r\n  }\r\n  return (\r\n    <Button {...buttonStyle} {...selected} onClick={(e: any) => updateScene(e.target.innerText)}>\r\n      {value}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SideBarItem;\r\n","import { Box, Image, VStack, Text } from '@chakra-ui/react';\r\nimport Logo from '../../img/logo.svg';\r\nimport Logout from './Logout';\r\nimport SidebarItem from './SidebarItem';\r\n\r\nconst sidebarData = ['جميع الاصناف', 'الملابس', 'الاجهزة المنزلية', 'الاجهزة الالكترونية', 'المسلتزمات الدراسية'];\r\n\r\ninterface Props {\r\n  currentScene: string;\r\n  updateScene: (value: string) => void;\r\n}\r\n\r\nconst Sidebar: React.FC<Props> = ({ updateScene, currentScene }) => (\r\n  <Box position=\"fixed\" right={0} p={5} w=\"250px\" top={0} h=\"100%\" borderLeft=\"2px\" borderColor=\"green.700\">\r\n    <VStack display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Image m=\"auto\" h={165} w={165} src={Logo} alt=\"منصة زائد\" />\r\n      <br />\r\n      <Text color=\"green.700\" fontSize=\"28px\" fontWeight=\"bold\">\r\n        منصة زائد\r\n      </Text>\r\n      <br />\r\n      {sidebarData.map((item, index) => {\r\n        return <SidebarItem key={index} value={item} updateScene={updateScene} currentScene={currentScene} />;\r\n      })}\r\n      <Logout updateScene={updateScene} />\r\n    </VStack>\r\n  </Box>\r\n);\r\nexport default Sidebar;\r\n","import { Modal, ModalOverlay, ModalContent, ModalCloseButton, ModalHeader, ModalBody, Image } from '@chakra-ui/react';\r\n\r\ninterface Props {\r\n  onClose: any;\r\n  isOpen: any;\r\n  src: string;\r\n}\r\n\r\nconst ImagePreview: React.FC<Props> = ({ onClose, isOpen, src }) => {\r\n  return (\r\n    <>\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalBody>\r\n            <Image src={src} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagePreview;\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Select,\r\n  Text,\r\n  Input,\r\n  Textarea,\r\n  HStack,\r\n  useDisclosure,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useState } from 'react';\r\nimport { successAlertTimer, errorAlert, askQuestionAlert } from '../../util/alerts';\r\nimport data from '../../data/cloth.json';\r\nimport ImagePreview from './ImagePreview';\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst buttonStyle: any = {\r\n  height: '48px',\r\n  width: '250px',\r\n  fontSize: '20px',\r\n  backgroundColor: 'white',\r\n  borderRadius: '5px',\r\n  border: '1px solid',\r\n  color: 'green.700',\r\n  boxShadow: 'base',\r\n  transition: 'all .2s ease-in-out',\r\n  _hover: { boxShadow: 'lg', transform: 'scale(1.01)' },\r\n};\r\n\r\nconst ItemDetails: React.FC<Props> = ({ isOpen, onClose }) => {\r\n  const { isOpen: isOpenImage, onOpen: onOpenImage, onClose: onCloseImage } = useDisclosure();\r\n\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    askQuestionAlert(onClose);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered size=\"xl\" closeOnOverlayClick={false}>\r\n        <ModalOverlay />\r\n        <ModalContent zIndex={1} background=\"white\" p={3}>\r\n          <ModalCloseButton />\r\n          <Flex alignItems=\"end\" justifyContent=\"center\" flexDirection=\"column\">\r\n            <ModalHeader m=\"auto\" color=\"green.800\">\r\n              تفاصيل الصنف\r\n            </ModalHeader>\r\n            <Divider borderColor=\"green.800\" />\r\n            <ModalBody>\r\n              <form onSubmit={onSubmit}>\r\n                <FormControl mt={3}>\r\n                  <FormLabel color=\"green.800\" fontSize=\"15px\" fontWeight=\"bold\">\r\n                    نوع الصنف :\r\n                  </FormLabel>\r\n                  <Input\r\n                    outlineColor=\"black\"\r\n                    borderColor=\"green.800\"\r\n                    boxShadow=\"base\"\r\n                    color=\"green.800\"\r\n                    readOnly\r\n                    fontWeight=\"bold\"\r\n                    value=\"الملابس\"\r\n                    width=\"500px\"\r\n                    _hover={{ borderColor: 'green.800' }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl mt={3}>\r\n                  <FormLabel color=\"green.800\" fontSize=\"15px\" fontWeight=\"bold\">\r\n                    اسم الصنف :\r\n                  </FormLabel>\r\n                  <Input\r\n                    outlineColor=\"black\"\r\n                    borderColor=\"green.800\"\r\n                    boxShadow=\"base\"\r\n                    color=\"green.800\"\r\n                    readOnly\r\n                    fontWeight=\"bold\"\r\n                    value=\"ملابس شتوية قديمة\"\r\n                    width=\"500px\"\r\n                    _hover={{ borderColor: 'green.700' }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl mt={3}>\r\n                  <FormLabel fontSize=\"15px\" fontWeight=\"bold\" color=\"green.800\">\r\n                    المدينة :\r\n                  </FormLabel>\r\n                  <Input\r\n                    outlineColor=\"black\"\r\n                    borderColor=\"green.800\"\r\n                    boxShadow=\"base\"\r\n                    color=\"green.800\"\r\n                    readOnly\r\n                    fontWeight=\"bold\"\r\n                    value=\"الرياض\"\r\n                    width=\"500px\"\r\n                    _hover={{ borderColor: 'green.800' }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl mt={3}>\r\n                  <FormLabel fontSize=\"15px\" fontWeight=\"bold\" color=\"green.800\">\r\n                    الملاحظات :\r\n                  </FormLabel>\r\n                  <Textarea\r\n                    outlineColor=\"black\"\r\n                    boxShadow=\"base\"\r\n                    borderColor=\"green.800\"\r\n                    fontWeight=\"bold\"\r\n                    width=\"500px\"\r\n                    color=\"green.800\"\r\n                    readOnly\r\n                    value=\"متوفر 4 اطقم مقاس large \"\r\n                    _hover={{ borderColor: 'green.800' }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl mt={3}>\r\n                  <FormLabel fontSize=\"15px\" fontWeight=\"bold\" color=\"green.800\">\r\n                    صور الصنف :\r\n                  </FormLabel>\r\n                  <HStack border=\"1px solid black\" borderColor=\"green.800\" boxShadow=\"base\" p={2} borderRadius=\"5px\">\r\n                    {data.map((item) => (\r\n                      <Image\r\n                        cursor=\"pointer\"\r\n                        onClick={(e: any) => {\r\n                          setImageSrc(e.target.src);\r\n                          onOpenImage();\r\n                        }}\r\n                        borderRadius=\"5px\"\r\n                        height=\"60px\"\r\n                        width=\"60px\"\r\n                        src={item.image}\r\n                      />\r\n                    ))}\r\n                  </HStack>\r\n                </FormControl>\r\n                <Button {...buttonStyle} mt={5} mr=\"125px\" type=\"submit\">\r\n                  طلب الصنف !\r\n                </Button>\r\n              </form>\r\n              <ImagePreview src={imageSrc} onClose={onCloseImage} isOpen={isOpenImage} />\r\n            </ModalBody>\r\n          </Flex>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemDetails;\r\n","import { Text, Box, Button, VStack, Image, useDisclosure } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport OfferDetails from './offerDetails';\r\n\r\nconst buttonStyle: any = {\r\n  fontSize: '20px',\r\n  border: '1px solid',\r\n  borderRadius: '5px',\r\n  boxShadow: '2xl',\r\n  transition: 'all .2s ease-in-out',\r\n  color: 'green.700',\r\n  _hover: { boxShadow: '2xl', transform: 'scale(1.01)' },\r\n};\r\n\r\ninterface Props {\r\n  offerData: any;\r\n  index: number;\r\n}\r\n\r\nconst OfferItem: React.FC<Props> = ({ offerData, index }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  let color;\r\n  if (index % 2 === 0) {\r\n    color = 'white';\r\n  } else {\r\n    color = '#F0F0F0';\r\n  }\r\n\r\n  console.log(index);\r\n  console.log(`color`, color);\r\n\r\n  return (\r\n    <>\r\n      <Button backgroundColor={color} onClick={onOpen} {...buttonStyle} width=\"100%\" height=\"140px\">\r\n        <VStack>\r\n          <Text fontSize=\"28px\">{offerData.name}</Text>\r\n          <br />\r\n          <Text fontSize=\"15px\" sx={{ marginLeft: 'auto !important' }} color=\"gray\">\r\n            الموقع : {offerData.location}\r\n          </Text>\r\n\r\n          <Text fontSize=\"15px\" sx={{ marginLeft: 'auto !important' }} color=\"#898989\">\r\n            التاريخ : 01/05/2021\r\n          </Text>\r\n        </VStack>\r\n        <Image borderRadius=\"5px\" width=\"180px\" height=\"120px\" src={offerData.image} alt=\"صورة\" mr=\"auto\" />\r\n      </Button>\r\n      <OfferDetails onClose={onClose} isOpen={isOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OfferItem;\r\n","import { VStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport OfferItem from './OfferItem';\r\n\r\ninterface Props {\r\n  data: any;\r\n}\r\n\r\nconst OfferList: React.FC<Props> = ({ data }) => {\r\n  return (\r\n    <VStack spacing=\"2\" width=\"100%\">\r\n      {data.map((offer: any, index: number) => (\r\n        <OfferItem key={index} index={index} offerData={offer} />\r\n      ))}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default OfferList;\r\n","import { SearchIcon } from '@chakra-ui/icons';\nimport { HStack, IconButton, Input, InputGroup, InputLeftElement, VStack } from '@chakra-ui/react';\nimport React from 'react';\nimport OfferList from '../components/offer/OfferList';\n\ninterface Props {\n  data: any;\n}\n\nconst BeneficiaryScene: React.FC<Props> = ({ data }) => {\n  return (\n    <VStack width=\"100%\">\n      <HStack>\n        <InputGroup>\n          <InputLeftElement cursor=\"pointer\" pointerEvents=\"none\">\n            <IconButton\n              width=\"50px\"\n              height=\"40px\"\n              mt=\"2.5\"\n              ml={1}\n              cursor=\"pointer\"\n              background=\"white\"\n              icon={<SearchIcon />}\n              aria-label=\"Search database\"\n              color=\"green.800\"\n            />\n          </InputLeftElement>\n          <Input\n            outlineColor=\"black\"\n            focusBorderColor=\"none\"\n            variant=\"outline\"\n            height=\"50px\"\n            fontSize=\"20px\"\n            borderColor=\"green.600\"\n            type=\"text\"\n            px=\"20px\"\n            border=\"1px solid\"\n            width=\"900px\"\n            placeholder=\"البحث على صنف معين\"\n            mb=\"10px\"\n            boxShadow=\"md\"\n            _hover={{ borderColor: 'green.600' }}\n          />\n        </InputGroup>\n      </HStack>\n      <OfferList data={data} />\n    </VStack>\n  );\n};\n\nexport default BeneficiaryScene;\n","import { Box, Flex } from '@chakra-ui/react';\nimport { useState, useContext, useEffect } from 'react';\nimport Sidebar from '../components/sidebar/Sidebar';\nimport BeneficiaryScene from '../scene/BeneficiaryScene';\nimport cloth from '../data/cloth.json';\nimport houseHold from '../data/houseHold.json';\nimport school from '../data/school.json';\nimport electronic from '../data/electronic.json';\n\nconst Dashboard = () => {\n  const allData = [...cloth, ...houseHold, ...school, ...electronic];\n  const [scene, setScene] = useState('جميع الاصناف');\n  const [data, setData] = useState(allData);\n  const [stage, setStage] = useState(<BeneficiaryScene data={data} />);\n\n  const updateScene = (scene: string) => {\n    setScene(scene);\n    switch (scene) {\n      case 'جميع الاصناف':\n        setData(allData);\n        break;\n      case 'الملابس':\n        setData(cloth);\n        break;\n      case 'الاجهزة المنزلية':\n        setData(houseHold);\n        break;\n      case 'الاجهزة الالكترونية':\n        setData(electronic);\n        break;\n      case 'المسلتزمات الدراسية':\n        setData(school);\n        break;\n      default:\n        setData(allData);\n    }\n  };\n\n  return (\n    <Flex alignItems=\"center\" mr=\"250px\" justifyContent=\"center\" py={3}>\n      <Sidebar updateScene={updateScene} currentScene={scene} />\n      <Flex width=\"100%\" rounded=\"md\" border=\" solid 2px\" borderColor=\"green.700\" boxShadow=\"dark-lg\" p={7}>\n        <BeneficiaryScene data={data} />\n      </Flex>\n    </Flex>\n  );\n};\nexport default Dashboard;\n","import {\n  Button,\n  Divider,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Text,\n  Textarea,\n  VStack,\n  Image,\n} from '@chakra-ui/react';\nimport Logo from '../img/logo.svg';\nimport { useHistory } from 'react-router-dom';\nimport { successAlertTimer } from '../util/alerts';\n\nconst buttonStyle: any = {\n  height: '50px',\n  width: '260px',\n  fontSize: '20px',\n  backgroundColor: 'white',\n  borderRadius: '5px',\n  border: '1px solid',\n  color: 'green.700',\n  boxShadow: 'base',\n  transition: 'all .2s ease-in-out',\n  _hover: { boxShadow: 'lg', transform: 'scale(1.01)' },\n};\n\nconst DonatePage = () => {\n  const history = useHistory();\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n\n    successAlertTimer('تم التبرع بـ الصنف بنجاح .. شكرا لك !');\n\n    history.push('/');\n  };\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" height=\"100vh\">\n      <VStack\n        width=\"40%\"\n        rounded=\"md\"\n        backgroundColor=\"white\"\n        border=\"10px\"\n        borderColor=\"black\"\n        boxShadow=\"dark-lg\"\n        p={5}\n      >\n        <Image boxSize=\"90px\" src={Logo} alt=\"شاركنا\" />\n        <Text color=\"green.700\" fontSize=\"30px\" fontWeight=\"bold\">\n          منصة زائد\n        </Text>\n        <Divider borderColor=\"green.700\" />\n\n        <form onSubmit={onSubmit}>\n          <FormControl>\n            <Text color=\"green.700\" fontSize=\"25px\">\n              تبرع بـ الزائد لديك :\n            </Text>\n            <br />\n            <FormLabel color=\"green.700\" fontSize=\"15px\" fontWeight=\"bold\">\n              نوع الصنف :\n            </FormLabel>\n            <Select\n              sx={{ textIndent: '15px' }}\n              outlineColor=\"black\"\n              focusBorderColor=\"none\"\n              variant=\"outline\"\n              height=\"48px\"\n              fontSize=\"15px\"\n              defaultValue=\"\"\n              borderColor=\"green.700\"\n              boxShadow=\"base\"\n              width=\"500px\"\n              color=\"green.700\"\n              fontWeight=\"bold\"\n              _hover={{ borderColor: 'green.700' }}\n            >\n              <option disabled label=\" \" />\n              <option>الملابس</option>\n              <option>الاجهزة المنزلية</option>\n              <option>الاجهزة الاكترونية</option>\n              <option>المستلزمات الدراسية</option>\n            </Select>\n          </FormControl>\n          <FormControl mt={3}>\n            <FormLabel color=\"green.700\" fontSize=\"15px\" fontWeight=\"bold\">\n              اسم الصنف :\n            </FormLabel>\n            <Input\n              outlineColor=\"black\"\n              borderColor=\"green.700\"\n              boxShadow=\"base\"\n              color=\"green.700\"\n              fontWeight=\"bold\"\n              width=\"500px\"\n              _hover={{ borderColor: 'green.700' }}\n              _focus={{ borderColor: 'green.700' }}\n            />\n          </FormControl>\n          <FormControl mt={3}>\n            <FormLabel fontSize=\"15px\" fontWeight=\"bold\" color=\"green.700\">\n              المدينة :\n            </FormLabel>\n            <Select\n              sx={{ textIndent: '15px' }}\n              outlineColor=\"black\"\n              focusBorderColor=\"none\"\n              variant=\"outline\"\n              height=\"48px\"\n              fontSize=\"15px\"\n              defaultValue=\"\"\n              borderColor=\"green.700\"\n              boxShadow=\"base\"\n              width=\"500px\"\n              color=\"green.700\"\n              fontWeight=\"bold\"\n              _hover={{ borderColor: 'green.700' }}\n            >\n              <option disabled label=\" \" />\n              <option>الرياض</option>\n              <option>الدمام</option>\n              <option>تبوك</option>\n              <option>مكة</option>\n            </Select>\n          </FormControl>\n          <FormControl mt={3}>\n            <FormLabel fontSize=\"15px\" fontWeight=\"bold\" color=\"green.700\">\n              رقم الجوال :\n            </FormLabel>\n            <Input\n              outlineColor=\"black\"\n              borderColor=\"green.700\"\n              boxShadow=\"base\"\n              color=\"green.700\"\n              fontWeight=\"bold\"\n              width=\"500px\"\n              _hover={{ borderColor: 'green.700' }}\n              _focus={{ borderColor: 'green.700' }}\n            />\n          </FormControl>\n          <FormControl mt={3}>\n            <FormLabel fontSize=\"15px\" fontWeight=\"bold\" color=\"green.700\">\n              الملاحظات :\n            </FormLabel>\n            <Textarea\n              outlineColor=\"black\"\n              boxShadow=\"base\"\n              borderColor=\"green.700\"\n              fontWeight=\"bold\"\n              width=\"500px\"\n              color=\"green.700\"\n              _hover={{ borderColor: 'green.700' }}\n              _focus={{ borderColor: 'green.700' }}\n            />\n          </FormControl>\n          <FormControl mt={3}>\n            <FormLabel fontSize=\"15px\" fontWeight=\"bold\" color=\"green.700\">\n              إرفاق صور للمنتج (إختياري) :\n            </FormLabel>\n            <Input\n              type=\"file\"\n              borderColor=\"green.700\"\n              border=\"none\"\n              color=\"green.700\"\n              fontWeight=\"bold\"\n              width=\"500px\"\n              _hover={{ borderColor: 'green.700' }}\n              _focus={{ borderColor: 'green.700' }}\n            />\n          </FormControl>\n          <Button {...buttonStyle} mt={5} mr=\"125px\" type=\"submit\">\n            تبرع الان !\n          </Button>\n        </form>\n      </VStack>\n    </Flex>\n  );\n};\nexport default DonatePage;\n","import * as React from 'react';\nimport { Box, Button, Flex, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound: React.FC = () => (\n  <Flex alignItems=\"center\" justifyContent=\"center\" height=\"100vh\">\n    <Box\n      alignItems=\"center\"\n      rounded=\"md\"\n      backgroundColor=\"#dfdfdf\"\n      border=\"10px\"\n      p=\"20\"\n      borderColor=\"black\"\n      boxShadow=\"dark-lg\"\n    >\n      <Text fontSize=\"70px\" textAlign=\"center\">\n        404\n      </Text>\n      <Text fontSize=\"xl\" mt=\"8\" textAlign=\"center\">\n        الصفحة المطلوبة غير موجودة\n      </Text>\n\n      <Text fontSize=\"lg\" mt=\"3\" textAlign=\"center\">\n        الرجاء التأكد من الرابط المدخل\n      </Text>\n\n      <Link to=\"/\">\n        <Button\n          _hover={{ borderColor: 'black' }}\n          size=\"md\"\n          height=\"48px\"\n          mt=\"8\"\n          width=\"250px\"\n          border=\"1px\"\n          borderColor=\"gray\"\n          color=\"#2E2E2E\"\n          boxShadow=\"md\"\n          backgroundColor=\"#dfdfdf\"\n        >\n          الرجوع الى الصفحة الرئيسية\n        </Button>\n      </Link>\n    </Box>\n  </Flex>\n);\n\nexport default NotFound;\n","import { extendTheme } from '@chakra-ui/react';\r\n\r\nconst styles = {\r\n  global: () => ({\r\n    body: {\r\n      color: 'black',\r\n      bg: 'white',\r\n      backgroundImage: \"url('./img/pattren.png')\",\r\n    },\r\n    input: {\r\n      fontSize: 'large',\r\n    },\r\n  }),\r\n};\r\n\r\nconst theme = extendTheme({\r\n  styles,\r\n  fonts: {\r\n    heading: 'Tajawal',\r\n    body: 'Tajawal',\r\n  },\r\n});\r\n\r\ntheme.shadows.outline = 'black';\r\n\r\nexport default theme;\r\n","import { Redirect, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { ChakraProvider, Container } from '@chakra-ui/react';\r\nimport HomePage from 'pages/HomePage';\r\nimport BeneficiaryPage from 'pages/BeneficiaryPage';\r\nimport DonatePage from 'pages/DonatePage';\r\nimport NotFound from 'pages/NotFound';\r\nimport theme from './theme';\r\nimport '@fontsource/tajawal';\r\n\r\nconst App: () => JSX.Element = () => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Router>\r\n        <Container maxW=\"container\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/donate\" component={DonatePage} />\r\n            <Route path=\"/beneficiary\" component={BeneficiaryPage} />\r\n            <Route path=\"/404\" component={NotFound} />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport UsersState from './context/users/UsersState';\nimport { ColorModeScript } from '@chakra-ui/react';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode=\"light\" />\n    <UsersState>\n      <App />\n    </UsersState>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}